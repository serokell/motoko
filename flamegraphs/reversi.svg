<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="214" onload="init(evt)" viewBox="0 0 1200 214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="214.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >reversi.mo</text>
<text id="details" x="10.00" y="197" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="197" > </text>
<g id="frames">
<g >
<title>motoko_rts::memory::alloc_blob::hb6bafdc2f27d446b (72 samples, 0.01%)</title><rect x="281.3" y="85" width="0.1" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="284.33" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf82f793b43efcee0 (1,288 samples, 0.17%)</title><rect x="264.6" y="101" width="2.1" height="15.0" fill="rgb(235,127,33)" rx="2" ry="2" />
<text  x="267.65" y="111.5" ></text>
</g>
<g >
<title>memcpy (240 samples, 0.03%)</title><rect x="27.4" y="53" width="0.3" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="30.36" y="63.5" ></text>
</g>
<g >
<title>B_lt (360 samples, 0.05%)</title><rect x="311.9" y="69" width="0.5" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="314.86" y="79.5" ></text>
</g>
<g >
<title>parse_idl_header (1,785 samples, 0.24%)</title><rect x="1141.3" y="117" width="2.8" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="1144.26" y="127.5" ></text>
</g>
<g >
<title>trans_state4 (112 samples, 0.02%)</title><rect x="268.8" y="133" width="0.2" height="15.0" fill="rgb(243,158,42)" rx="2" ry="2" />
<text  x="271.77" y="143.5" ></text>
</g>
<g >
<title>B_gt (3,240 samples, 0.44%)</title><rect x="177.5" y="85" width="5.2" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="180.53" y="95.5" ></text>
</g>
<g >
<title>B_mul (3,692 samples, 0.50%)</title><rect x="571.3" y="69" width="5.9" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="574.27" y="79.5" ></text>
</g>
<g >
<title>B_add (96 samples, 0.01%)</title><rect x="288.5" y="101" width="0.1" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="291.49" y="111.5" ></text>
</g>
<g >
<title>compacting_gc (19,148 samples, 2.59%)</title><rect x="238.2" y="133" width="30.6" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="241.20" y="143.5" >co..</text>
</g>
<g >
<title>@deserialize_go&lt;I&gt; (900 samples, 0.12%)</title><rect x="1139.4" y="117" width="1.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1142.38" y="127.5" ></text>
</g>
<g >
<title>B_ge (25,500 samples, 3.45%)</title><rect x="902.1" y="85" width="40.7" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="905.10" y="95.5" >B_ge</text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb6bafdc2f27d446b (72 samples, 0.01%)</title><rect x="276.9" y="101" width="0.1" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="279.87" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::h416bfa181cd1565b (5,096 samples, 0.69%)</title><rect x="269.1" y="117" width="8.1" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="272.05" y="127.5" ></text>
</g>
<g >
<title>B_sub (155 samples, 0.02%)</title><rect x="1174.9" y="101" width="0.2" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="1177.86" y="111.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (459 samples, 0.06%)</title><rect x="1054.7" y="101" width="0.7" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="1057.69" y="111.5" ></text>
</g>
<g >
<title>is_empty (1,201 samples, 0.16%)</title><rect x="300.6" y="117" width="1.9" height="15.0" fill="rgb(243,129,42)" rx="2" ry="2" />
<text  x="303.56" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb6bafdc2f27d446b (144 samples, 0.02%)</title><rect x="237.7" y="101" width="0.2" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="240.68" y="111.5" ></text>
</g>
<g >
<title>text_to_buf (19,392 samples, 2.62%)</title><rect x="27.7" y="53" width="31.0" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="30.75" y="63.5" >te..</text>
</g>
<g >
<title>leb128_decode (256 samples, 0.03%)</title><rect x="235.8" y="117" width="0.4" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="238.81" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_stack::push_mark_stack::h1f99226b92d7e984 (200 samples, 0.03%)</title><rect x="267.1" y="85" width="0.4" height="15.0" fill="rgb(244,127,43)" rx="2" ry="2" />
<text  x="270.15" y="95.5" ></text>
</g>
<g >
<title>memcpy (12,224 samples, 1.65%)</title><rect x="39.2" y="37" width="19.5" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="42.19" y="47.5" ></text>
</g>
<g >
<title>B_gt (650 samples, 0.09%)</title><rect x="294.3" y="85" width="1.0" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="297.27" y="95.5" ></text>
</g>
<g >
<title>leb128_decode (128 samples, 0.02%)</title><rect x="1182.0" y="101" width="0.2" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="1184.96" y="111.5" ></text>
</g>
<g >
<title>board (162,245 samples, 21.95%)</title><rect x="10.0" y="149" width="259.0" height="15.0" fill="rgb(249,157,49)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >board</text>
</g>
<g >
<title>alloc_blob (304 samples, 0.04%)</title><rect x="58.7" y="85" width="0.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="61.71" y="95.5" ></text>
</g>
<g >
<title>$lambda (140,597 samples, 19.02%)</title><rect x="10.2" y="133" width="224.5" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="13.20" y="143.5" >$lambda</text>
</g>
<g >
<title>B_add (1,536 samples, 0.21%)</title><rect x="1177.8" y="85" width="2.4" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="1180.78" y="95.5" ></text>
</g>
<g >
<title>parse_idl_header (265 samples, 0.04%)</title><rect x="1181.8" y="117" width="0.4" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="1184.80" y="127.5" ></text>
</g>
<g >
<title>alloc_blob (228 samples, 0.03%)</title><rect x="299.4" y="85" width="0.4" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="302.41" y="95.5" ></text>
</g>
<g >
<title>B_eq (210 samples, 0.03%)</title><rect x="319.2" y="85" width="0.4" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="322.22" y="95.5" ></text>
</g>
<g >
<title>B_add (72 samples, 0.01%)</title><rect x="300.1" y="117" width="0.1" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="303.12" y="127.5" ></text>
</g>
<g >
<title>B_eq (70 samples, 0.01%)</title><rect x="300.2" y="117" width="0.1" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="303.23" y="127.5" ></text>
</g>
<g >
<title>$lambda (30,924 samples, 4.18%)</title><rect x="10.3" y="117" width="49.3" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="13.27" y="127.5" >$lam..</text>
</g>
<g >
<title>set_and_flip (15,943 samples, 2.16%)</title><rect x="302.6" y="117" width="25.5" height="15.0" fill="rgb(244,154,43)" rx="2" ry="2" />
<text  x="305.65" y="127.5" >s..</text>
</g>
<g >
<title>B_sub (93 samples, 0.01%)</title><rect x="302.5" y="101" width="0.1" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="305.50" y="111.5" ></text>
</g>
<g >
<title>next (18,072 samples, 2.45%)</title><rect x="153.8" y="101" width="28.9" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="156.85" y="111.5" >next</text>
</g>
<g >
<title>text_to_buf (264 samples, 0.04%)</title><rect x="299.0" y="69" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="301.99" y="79.5" ></text>
</g>
<g >
<title>memcpy (552 samples, 0.07%)</title><rect x="275.4" y="101" width="0.8" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="278.35" y="111.5" ></text>
</g>
<g >
<title>B_mul (12,922 samples, 1.75%)</title><rect x="131.4" y="101" width="20.7" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="134.43" y="111.5" ></text>
</g>
<g >
<title>B_add (288 samples, 0.04%)</title><rect x="323.0" y="85" width="0.4" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="325.96" y="95.5" ></text>
</g>
<g >
<title>__wasm_apply_data_relocs (980 samples, 0.13%)</title><rect x="295.6" y="117" width="1.6" height="15.0" fill="rgb(244,119,43)" rx="2" ry="2" />
<text  x="298.65" y="127.5" ></text>
</g>
<g >
<title>B_mul (130 samples, 0.02%)</title><rect x="288.7" y="101" width="0.2" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="291.68" y="111.5" ></text>
</g>
<g >
<title>$lambda (526,198 samples, 71.20%)</title><rect x="297.6" y="133" width="840.1" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="300.63" y="143.5" >$lambda</text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::hb81f6542e95ca663 (120 samples, 0.02%)</title><rect x="276.7" y="101" width="0.2" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="279.67" y="111.5" ></text>
</g>
<g >
<title>B_lt (2,840 samples, 0.38%)</title><rect x="566.7" y="69" width="4.6" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="569.73" y="79.5" ></text>
</g>
<g >
<title>__set_hp (512 samples, 0.07%)</title><rect x="226.8" y="85" width="0.8" height="15.0" fill="rgb(238,132,36)" rx="2" ry="2" />
<text  x="229.79" y="95.5" ></text>
</g>
<g >
<title>B_ge (160 samples, 0.02%)</title><rect x="325.5" y="69" width="0.2" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="328.47" y="79.5" ></text>
</g>
<g >
<title>@deserialize&lt;&gt; (2,028 samples, 0.27%)</title><rect x="234.7" y="133" width="3.2" height="15.0" fill="rgb(242,176,41)" rx="2" ry="2" />
<text  x="237.67" y="143.5" ></text>
</g>
<g >
<title>next (3,862 samples, 0.52%)</title><rect x="289.1" y="101" width="6.2" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="292.14" y="111.5" ></text>
</g>
<g >
<title>init (8,381 samples, 1.13%)</title><rect x="1168.0" y="117" width="13.4" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="1171.03" y="127.5" ></text>
</g>
<g >
<title>B_sub (372 samples, 0.05%)</title><rect x="313.3" y="69" width="0.6" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="316.26" y="79.5" ></text>
</g>
<g >
<title>B_add (2,784 samples, 0.38%)</title><rect x="524.3" y="85" width="4.5" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="527.32" y="95.5" ></text>
</g>
<g >
<title>memset (444 samples, 0.06%)</title><rect x="1164.4" y="101" width="0.7" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="1167.44" y="111.5" ></text>
</g>
<g >
<title>@deserialize&lt;&gt; (507 samples, 0.07%)</title><rect x="1181.4" y="133" width="0.8" height="15.0" fill="rgb(242,176,41)" rx="2" ry="2" />
<text  x="1184.41" y="143.5" ></text>
</g>
<g >
<title>@buffer_size&lt;t&gt; (111 samples, 0.02%)</title><rect x="298.6" y="85" width="0.2" height="15.0" fill="rgb(244,118,43)" rx="2" ry="2" />
<text  x="301.61" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb6bafdc2f27d446b (72 samples, 0.01%)</title><rect x="280.4" y="101" width="0.1" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="283.41" y="111.5" ></text>
</g>
<g >
<title>B_eq (130 samples, 0.02%)</title><rect x="311.1" y="69" width="0.2" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="314.08" y="79.5" ></text>
</g>
<g >
<title>B_add (288 samples, 0.04%)</title><rect x="306.6" y="85" width="0.5" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="309.59" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb6bafdc2f27d446b (108 samples, 0.01%)</title><rect x="1142.8" y="101" width="0.1" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="1145.77" y="111.5" ></text>
</g>
<g >
<title>memcpy (3,052 samples, 0.41%)</title><rect x="227.6" y="85" width="4.9" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="230.61" y="95.5" ></text>
</g>
<g >
<title>leb128_decode (192 samples, 0.03%)</title><rect x="1141.0" y="117" width="0.3" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="1143.95" y="127.5" ></text>
</g>
<g >
<title>sleb128_decode (729 samples, 0.10%)</title><rect x="1144.1" y="117" width="1.2" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="1147.11" y="127.5" ></text>
</g>
<g >
<title>memcpy (72 samples, 0.01%)</title><rect x="1182.5" y="117" width="0.1" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="1185.49" y="127.5" ></text>
</g>
<g >
<title>B_add (96 samples, 0.01%)</title><rect x="1174.5" y="101" width="0.1" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="1177.45" y="111.5" ></text>
</g>
<g >
<title>memset (104 samples, 0.01%)</title><rect x="276.2" y="101" width="0.2" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="279.23" y="111.5" ></text>
</g>
<g >
<title>B_eq (300 samples, 0.04%)</title><rect x="304.9" y="101" width="0.5" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="307.94" y="111.5" ></text>
</g>
<g >
<title>bigint_sleb128_decode_word64 (459 samples, 0.06%)</title><rect x="1140.1" y="101" width="0.7" height="15.0" fill="rgb(237,113,36)" rx="2" ry="2" />
<text  x="1143.09" y="111.5" ></text>
</g>
<g >
<title>text_to_buf (29,728 samples, 4.02%)</title><rect x="11.2" y="69" width="47.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="14.25" y="79.5" >text..</text>
</g>
<g >
<title>range (74 samples, 0.01%)</title><rect x="295.3" y="101" width="0.2" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="298.33" y="111.5" ></text>
</g>
<g >
<title>opponent (3,500 samples, 0.47%)</title><rect x="577.2" y="85" width="5.5" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="580.16" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::types::block_size::haa6e1a3c5243bd1b (396 samples, 0.05%)</title><rect x="1167.1" y="101" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1170.13" y="111.5" ></text>
</g>
<g >
<title>__wasm_call_ctors (981 samples, 0.13%)</title><rect x="295.6" y="133" width="1.6" height="15.0" fill="rgb(239,119,38)" rx="2" ry="2" />
<text  x="298.65" y="143.5" ></text>
</g>
<g >
<title>canister_init (16,667 samples, 2.26%)</title><rect x="269.0" y="149" width="26.6" height="15.0" fill="rgb(236,106,34)" rx="2" ry="2" />
<text  x="272.03" y="159.5" >c..</text>
</g>
<g >
<title>B_sub (744 samples, 0.10%)</title><rect x="326.9" y="85" width="1.2" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="329.92" y="95.5" ></text>
</g>
<g >
<title>B_add (1,728 samples, 0.23%)</title><rect x="316.5" y="85" width="2.7" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="319.46" y="95.5" ></text>
</g>
<g >
<title>B_add (11,928 samples, 1.61%)</title><rect x="104.6" y="101" width="19.1" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="107.63" y="111.5" ></text>
</g>
<g >
<title>B_add (576 samples, 0.08%)</title><rect x="324.5" y="69" width="0.9" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="327.46" y="79.5" ></text>
</g>
<g >
<title>opponent (840 samples, 0.11%)</title><rect x="326.8" y="101" width="1.3" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="329.76" y="111.5" ></text>
</g>
<g >
<title>B_mul (5,434 samples, 0.74%)</title><rect x="505.4" y="101" width="8.6" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="508.35" y="111.5" ></text>
</g>
<g >
<title>@serialize_go&lt;t&gt; (393 samples, 0.05%)</title><rect x="298.8" y="85" width="0.6" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="301.79" y="95.5" ></text>
</g>
<g >
<title>compacting_gc (5,097 samples, 0.69%)</title><rect x="269.1" y="133" width="8.1" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="272.05" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::principal_id::enc_stash::hade07e1e4d51be16 (372 samples, 0.05%)</title><rect x="281.4" y="85" width="0.6" height="15.0" fill="rgb(239,127,37)" rx="2" ry="2" />
<text  x="284.44" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::text::alloc_text_blob::h38617f18505d9ec7 (1,372 samples, 0.19%)</title><rect x="232.5" y="85" width="2.2" height="15.0" fill="rgb(242,127,41)" rx="2" ry="2" />
<text  x="235.48" y="95.5" ></text>
</g>
<g >
<title>leb128_decode (64 samples, 0.01%)</title><rect x="1181.7" y="117" width="0.1" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="1184.70" y="127.5" ></text>
</g>
<g >
<title>@buffer_size&lt;t&gt; (148 samples, 0.02%)</title><rect x="10.7" y="85" width="0.3" height="15.0" fill="rgb(244,118,43)" rx="2" ry="2" />
<text  x="13.73" y="95.5" ></text>
</g>
<g >
<title>leb128_decode (384 samples, 0.05%)</title><rect x="1141.9" y="101" width="0.6" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="1144.89" y="111.5" ></text>
</g>
<g >
<title>memcpy (284 samples, 0.04%)</title><rect x="59.2" y="85" width="0.4" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="62.19" y="95.5" ></text>
</g>
<g >
<title>opponent (105 samples, 0.01%)</title><rect x="302.5" y="117" width="0.1" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="305.48" y="127.5" ></text>
</g>
<g >
<title>alloc_blob (114 samples, 0.02%)</title><rect x="1145.3" y="133" width="0.2" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="1148.31" y="143.5" ></text>
</g>
<g >
<title>B_mul (104 samples, 0.01%)</title><rect x="323.4" y="85" width="0.2" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="326.42" y="95.5" ></text>
</g>
<g >
<title>exists (282,042 samples, 38.16%)</title><rect x="582.7" y="101" width="450.3" height="15.0" fill="rgb(234,142,32)" rx="2" ry="2" />
<text  x="585.75" y="111.5" >exists</text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf82f793b43efcee0 (172 samples, 0.02%)</title><rect x="1189.1" y="101" width="0.3" height="15.0" fill="rgb(235,127,33)" rx="2" ry="2" />
<text  x="1192.14" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb6bafdc2f27d446b (288 samples, 0.04%)</title><rect x="267.5" y="101" width="0.4" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="270.47" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb6bafdc2f27d446b (216 samples, 0.03%)</title><rect x="1166.8" y="101" width="0.3" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="1169.78" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb6bafdc2f27d446b (216 samples, 0.03%)</title><rect x="299.4" y="69" width="0.4" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="302.43" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::types::block_size::haa6e1a3c5243bd1b (132 samples, 0.02%)</title><rect x="1189.7" y="101" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1192.72" y="111.5" ></text>
</g>
<g >
<title>B_add (4,944 samples, 0.67%)</title><rect x="467.5" y="101" width="7.9" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="470.55" y="111.5" ></text>
</g>
<g >
<title>B_add (95,328 samples, 12.90%)</title><rect x="732.0" y="85" width="152.2" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="735.03" y="95.5" >B_add</text>
</g>
<g >
<title>B_sub (1,116 samples, 0.15%)</title><rect x="152.1" y="101" width="1.7" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="155.06" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::h416bfa181cd1565b (4,554 samples, 0.62%)</title><rect x="1182.7" y="117" width="7.2" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="1185.66" y="127.5" ></text>
</g>
<g >
<title>alloc_blob (76 samples, 0.01%)</title><rect x="1182.4" y="117" width="0.1" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="1185.37" y="127.5" ></text>
</g>
<g >
<title>__get_hp (256 samples, 0.03%)</title><rect x="226.4" y="85" width="0.4" height="15.0" fill="rgb(238,132,36)" rx="2" ry="2" />
<text  x="229.38" y="95.5" ></text>
</g>
<g >
<title>text_concat (29,276 samples, 3.96%)</title><rect x="187.9" y="101" width="46.8" height="15.0" fill="rgb(232,171,30)" rx="2" ry="2" />
<text  x="190.93" y="111.5" >text..</text>
</g>
<g >
<title>sleb128_decode (729 samples, 0.10%)</title><rect x="1142.9" y="101" width="1.2" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="1145.95" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::types::block_size::haa6e1a3c5243bd1b (132 samples, 0.02%)</title><rect x="277.0" y="101" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="279.98" y="111.5" ></text>
</g>
<g >
<title>reset (13,806 samples, 1.87%)</title><rect x="1168.0" y="149" width="22.0" height="15.0" fill="rgb(237,165,35)" rx="2" ry="2" />
<text  x="1170.96" y="159.5" >r..</text>
</g>
<g >
<title>obj_idx&lt;0&gt; (612 samples, 0.08%)</title><rect x="182.7" y="101" width="1.0" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="185.70" y="111.5" ></text>
</g>
<g >
<title>memcmp (179 samples, 0.02%)</title><rect x="280.0" y="101" width="0.3" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="283.05" y="111.5" ></text>
</g>
<g >
<title>range (2,664 samples, 0.36%)</title><rect x="183.7" y="101" width="4.2" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="186.68" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_stack::push_mark_stack::h1f99226b92d7e984 (150 samples, 0.02%)</title><rect x="1166.5" y="85" width="0.3" height="15.0" fill="rgb(244,127,43)" rx="2" ry="2" />
<text  x="1169.54" y="95.5" ></text>
</g>
<g >
<title>opponent (280 samples, 0.04%)</title><rect x="326.3" y="85" width="0.5" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="329.32" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::hb81f6542e95ca663 (360 samples, 0.05%)</title><rect x="1166.2" y="101" width="0.6" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="1169.21" y="111.5" ></text>
</g>
<g >
<title>B_ge (2,840 samples, 0.38%)</title><rect x="562.2" y="69" width="4.5" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="565.20" y="79.5" ></text>
</g>
<g >
<title>B_gt (650 samples, 0.09%)</title><rect x="1180.2" y="85" width="1.1" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="1183.23" y="95.5" ></text>
</g>
<g >
<title>B_eq (11,190 samples, 1.51%)</title><rect x="884.2" y="85" width="17.9" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="887.23" y="95.5" ></text>
</g>
<g >
<title>exists (1,708 samples, 0.23%)</title><rect x="323.6" y="85" width="2.7" height="15.0" fill="rgb(234,142,32)" rx="2" ry="2" />
<text  x="326.59" y="95.5" ></text>
</g>
<g >
<title>B_eq (1,060 samples, 0.14%)</title><rect x="560.5" y="69" width="1.7" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="563.51" y="79.5" ></text>
</g>
<g >
<title>B_sub (43,896 samples, 5.94%)</title><rect x="1064.5" y="85" width="70.0" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="1067.46" y="95.5" >B_sub</text>
</g>
<g >
<title>memcpy (213 samples, 0.03%)</title><rect x="299.8" y="85" width="0.3" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="302.78" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::hb81f6542e95ca663 (480 samples, 0.06%)</title><rect x="266.7" y="101" width="0.8" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="269.70" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::h416bfa181cd1565b (19,144 samples, 2.59%)</title><rect x="238.2" y="117" width="30.6" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="241.21" y="127.5" >mo..</text>
</g>
<g >
<title>B_add (5,184 samples, 0.70%)</title><rect x="1042.5" y="85" width="8.3" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="1045.53" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::principal_id::principal_of_blob::h6560fd4a9cbb47b9 (949 samples, 0.13%)</title><rect x="280.5" y="101" width="1.5" height="15.0" fill="rgb(226,127,24)" rx="2" ry="2" />
<text  x="283.52" y="111.5" ></text>
</g>
<g >
<title>B_mul (78 samples, 0.01%)</title><rect x="305.4" y="101" width="0.1" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="308.42" y="111.5" ></text>
</g>
<g >
<title>B_eq (275 samples, 0.04%)</title><rect x="302.0" y="101" width="0.5" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="305.04" y="111.5" ></text>
</g>
<g >
<title>B_add (6,912 samples, 0.94%)</title><rect x="166.5" y="85" width="11.0" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="169.49" y="95.5" ></text>
</g>
<g >
<title>B_mul (468 samples, 0.06%)</title><rect x="312.4" y="69" width="0.8" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="315.43" y="79.5" ></text>
</g>
<g >
<title>eventually (5,206 samples, 0.70%)</title><rect x="305.5" y="101" width="8.4" height="15.0" fill="rgb(243,165,42)" rx="2" ry="2" />
<text  x="308.54" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf82f793b43efcee0 (666 samples, 0.09%)</title><rect x="1165.1" y="101" width="1.1" height="15.0" fill="rgb(235,127,33)" rx="2" ry="2" />
<text  x="1168.15" y="111.5" ></text>
</g>
<g >
<title>B_mul (624 samples, 0.08%)</title><rect x="321.1" y="85" width="1.0" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="324.08" y="95.5" ></text>
</g>
<g >
<title>init (11,519 samples, 1.56%)</title><rect x="277.2" y="133" width="18.4" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="280.19" y="143.5" ></text>
</g>
<g >
<title>@serialize_go&lt;t&gt; (29,900 samples, 4.05%)</title><rect x="11.0" y="85" width="47.7" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="13.97" y="95.5" >@ser..</text>
</g>
<g >
<title>B_eq (18,735 samples, 2.53%)</title><rect x="475.4" y="101" width="30.0" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="478.44" y="111.5" >B_eq</text>
</g>
<g >
<title>next (3,862 samples, 0.52%)</title><rect x="1175.1" y="101" width="6.2" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="1178.10" y="111.5" ></text>
</g>
<g >
<title>parse_idl_header (1,060 samples, 0.14%)</title><rect x="236.2" y="117" width="1.7" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="239.22" y="127.5" ></text>
</g>
<g >
<title>B_lt (480 samples, 0.06%)</title><rect x="320.3" y="85" width="0.8" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="323.32" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::types::block_size::haa6e1a3c5243bd1b (528 samples, 0.07%)</title><rect x="267.9" y="101" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="270.93" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb6bafdc2f27d446b (72 samples, 0.01%)</title><rect x="1189.6" y="101" width="0.1" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="1192.61" y="111.5" ></text>
</g>
<g >
<title>exists (5,154 samples, 0.70%)</title><rect x="313.9" y="101" width="8.2" height="15.0" fill="rgb(234,142,32)" rx="2" ry="2" />
<text  x="316.85" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb6bafdc2f27d446b (72 samples, 0.01%)</title><rect x="1182.4" y="101" width="0.1" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="1185.37" y="111.5" ></text>
</g>
<g >
<title>B_mul (130 samples, 0.02%)</title><rect x="1174.6" y="101" width="0.3" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="1177.65" y="111.5" ></text>
</g>
<g >
<title>memset (104 samples, 0.01%)</title><rect x="1189.0" y="101" width="0.1" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="1191.98" y="111.5" ></text>
</g>
<g >
<title>B_lt (26,880 samples, 3.64%)</title><rect x="942.8" y="85" width="42.9" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="945.81" y="95.5" >B_lt</text>
</g>
<g >
<title>range (1,998 samples, 0.27%)</title><rect x="1134.5" y="101" width="3.2" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="1137.55" y="111.5" ></text>
</g>
<g >
<title>B_sub (155 samples, 0.02%)</title><rect x="288.9" y="101" width="0.2" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="291.89" y="111.5" ></text>
</g>
<g >
<title>B_ge (360 samples, 0.05%)</title><rect x="311.3" y="69" width="0.6" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="314.29" y="79.5" ></text>
</g>
<g >
<title>compacting_gc (4,555 samples, 0.62%)</title><rect x="1182.7" y="133" width="7.2" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="1185.66" y="143.5" ></text>
</g>
<g >
<title>B_add (1,296 samples, 0.18%)</title><rect x="309.0" y="69" width="2.1" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="312.01" y="79.5" ></text>
</g>
<g >
<title>flip (2,932 samples, 0.40%)</title><rect x="322.1" y="101" width="4.7" height="15.0" fill="rgb(244,139,43)" rx="2" ry="2" />
<text  x="325.08" y="111.5" ></text>
</g>
<g >
<title>B_lt (160 samples, 0.02%)</title><rect x="325.7" y="69" width="0.3" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="328.73" y="79.5" ></text>
</g>
<g >
<title>opponent (49,560 samples, 6.71%)</title><rect x="1055.4" y="101" width="79.1" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="1058.42" y="111.5" >opponent</text>
</g>
<g >
<title>B_sub (837 samples, 0.11%)</title><rect x="514.0" y="101" width="1.4" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="517.03" y="111.5" ></text>
</g>
<g >
<title>init (8,381 samples, 1.13%)</title><rect x="282.1" y="117" width="13.4" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="285.07" y="127.5" ></text>
</g>
<g >
<title>@serialize&lt;t&gt; (30,888 samples, 4.18%)</title><rect x="10.3" y="101" width="49.3" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="13.33" y="111.5" >@ser..</text>
</g>
<g >
<title>alloc_blob (152 samples, 0.02%)</title><rect x="238.0" y="133" width="0.2" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="240.96" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::idl::check_typearg::h7a69986705540d34 (171 samples, 0.02%)</title><rect x="1142.5" y="101" width="0.3" height="15.0" fill="rgb(241,127,39)" rx="2" ry="2" />
<text  x="1145.50" y="111.5" ></text>
</g>
<g >
<title>@deserialize&lt;III&gt; (4,722 samples, 0.64%)</title><rect x="1137.7" y="133" width="7.6" height="15.0" fill="rgb(243,176,41)" rx="2" ry="2" />
<text  x="1140.74" y="143.5" ></text>
</g>
<g >
<title>link_start (1,030 samples, 0.14%)</title><rect x="295.6" y="149" width="1.7" height="15.0" fill="rgb(239,129,37)" rx="2" ry="2" />
<text  x="298.64" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb6bafdc2f27d446b (108 samples, 0.01%)</title><rect x="1145.3" y="117" width="0.2" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="1148.32" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb6bafdc2f27d446b (144 samples, 0.02%)</title><rect x="238.0" y="117" width="0.2" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="240.97" y="127.5" ></text>
</g>
<g >
<title>memset (744 samples, 0.10%)</title><rect x="263.5" y="101" width="1.1" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="266.46" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf82f793b43efcee0 (172 samples, 0.02%)</title><rect x="276.4" y="101" width="0.3" height="15.0" fill="rgb(235,127,33)" rx="2" ry="2" />
<text  x="279.40" y="111.5" ></text>
</g>
<g >
<title>$lambda (1,161 samples, 0.16%)</title><rect x="298.3" y="117" width="1.8" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="301.26" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb6bafdc2f27d446b (1,008 samples, 0.14%)</title><rect x="233.1" y="69" width="1.6" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="236.06" y="79.5" ></text>
</g>
<g >
<title>region_init (82 samples, 0.01%)</title><rect x="295.5" y="117" width="0.1" height="15.0" fill="rgb(236,165,34)" rx="2" ry="2" />
<text  x="298.45" y="127.5" ></text>
</g>
<g >
<title>eventually (42,208 samples, 5.71%)</title><rect x="515.4" y="101" width="67.3" height="15.0" fill="rgb(243,165,42)" rx="2" ry="2" />
<text  x="518.36" y="111.5" >eventua..</text>
</g>
<g >
<title>memcpy (180 samples, 0.02%)</title><rect x="299.1" y="53" width="0.3" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="302.13" y="63.5" ></text>
</g>
<g >
<title>idl_sub_buf_init (76 samples, 0.01%)</title><rect x="235.6" y="117" width="0.1" height="15.0" fill="rgb(236,184,34)" rx="2" ry="2" />
<text  x="238.63" y="127.5" ></text>
</g>
<g >
<title>B_add (10,224 samples, 1.38%)</title><rect x="544.2" y="69" width="16.3" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="547.18" y="79.5" ></text>
</g>
<g >
<title>place (545,341 samples, 73.79%)</title><rect x="297.3" y="149" width="870.7" height="15.0" fill="rgb(252,165,52)" rx="2" ry="2" />
<text  x="300.29" y="159.5" >place</text>
</g>
<g >
<title>all (739,089 samples, 100%)</title><rect x="10.0" y="165" width="1180.0" height="15.0" fill="rgb(255,230,55)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::hb81f6542e95ca663 (120 samples, 0.02%)</title><rect x="1189.4" y="101" width="0.2" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="1192.42" y="111.5" ></text>
</g>
<g >
<title>next (13,554 samples, 1.83%)</title><rect x="1033.0" y="101" width="21.7" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="1036.05" y="111.5" >n..</text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::h416bfa181cd1565b (13,944 samples, 1.89%)</title><rect x="1145.5" y="117" width="22.3" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="1148.50" y="127.5" >m..</text>
</g>
<g >
<title>B_add (72 samples, 0.01%)</title><rect x="304.8" y="101" width="0.1" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="307.82" y="111.5" ></text>
</g>
<g >
<title>B_sub (3,100 samples, 0.42%)</title><rect x="577.8" y="69" width="4.9" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="580.80" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb6bafdc2f27d446b (288 samples, 0.04%)</title><rect x="58.7" y="69" width="0.5" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="61.73" y="79.5" ></text>
</g>
<g >
<title>B_sub (248 samples, 0.03%)</title><rect x="326.4" y="69" width="0.4" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="329.37" y="79.5" ></text>
</g>
<g >
<title>Array_init (2,535 samples, 0.34%)</title><rect x="463.5" y="101" width="4.0" height="15.0" fill="rgb(236,150,34)" rx="2" ry="2" />
<text  x="466.50" y="111.5" ></text>
</g>
<g >
<title>@serialize&lt;t&gt; (1,134 samples, 0.15%)</title><rect x="298.3" y="101" width="1.8" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="301.31" y="111.5" ></text>
</g>
<g >
<title>exists (3,838 samples, 0.52%)</title><rect x="307.1" y="85" width="6.1" height="15.0" fill="rgb(234,142,32)" rx="2" ry="2" />
<text  x="310.05" y="95.5" ></text>
</g>
<g >
<title>valid_moves (507,110 samples, 68.61%)</title><rect x="328.1" y="117" width="809.6" height="15.0" fill="rgb(237,120,35)" rx="2" ry="2" />
<text  x="331.10" y="127.5" >valid_moves</text>
</g>
<g >
<title>leb128_decode (512 samples, 0.07%)</title><rect x="236.9" y="101" width="0.8" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="239.86" y="111.5" ></text>
</g>
<g >
<title>B_ge (480 samples, 0.06%)</title><rect x="319.6" y="85" width="0.7" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="322.55" y="95.5" ></text>
</g>
<g >
<title>compacting_gc (13,947 samples, 1.89%)</title><rect x="1145.5" y="133" width="22.3" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="1148.49" y="143.5" >c..</text>
</g>
<g >
<title>exists (30,312 samples, 4.10%)</title><rect x="528.8" y="85" width="48.4" height="15.0" fill="rgb(234,142,32)" rx="2" ry="2" />
<text  x="531.77" y="95.5" >exists</text>
</g>
<g >
<title>B_mul (208 samples, 0.03%)</title><rect x="326.0" y="69" width="0.3" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="328.98" y="79.5" ></text>
</g>
<g >
<title>opponent (420 samples, 0.06%)</title><rect x="313.2" y="85" width="0.7" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="316.18" y="95.5" ></text>
</g>
<g >
<title>range (74 samples, 0.01%)</title><rect x="1181.3" y="101" width="0.1" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="1184.30" y="111.5" ></text>
</g>
<g >
<title>render (109,625 samples, 14.83%)</title><rect x="59.6" y="117" width="175.1" height="15.0" fill="rgb(243,181,41)" rx="2" ry="2" />
<text  x="62.65" y="127.5" >render</text>
</g>
<g >
<title>motoko_rts::memory::alloc_array::hfb4dad1bf9425cf5 (135 samples, 0.02%)</title><rect x="467.3" y="69" width="0.2" height="15.0" fill="rgb(244,127,43)" rx="2" ry="2" />
<text  x="470.33" y="79.5" ></text>
</g>
<g >
<title>alloc_array (141 samples, 0.02%)</title><rect x="467.3" y="85" width="0.2" height="15.0" fill="rgb(239,128,37)" rx="2" ry="2" />
<text  x="470.32" y="95.5" ></text>
</g>
<g >
<title>$lambda (8,388 samples, 1.13%)</title><rect x="1168.0" y="133" width="13.4" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="1171.02" y="143.5" ></text>
</g>
<g >
<title>@serialize&lt;&gt; (229 samples, 0.03%)</title><rect x="1182.2" y="133" width="0.4" height="15.0" fill="rgb(242,156,41)" rx="2" ry="2" />
<text  x="1185.24" y="143.5" ></text>
</g>
<g >
<title>B_mul (29,640 samples, 4.01%)</title><rect x="985.7" y="85" width="47.3" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="988.72" y="95.5" >B_mul</text>
</g>
<g >
<title>B_add (1,536 samples, 0.21%)</title><rect x="291.8" y="85" width="2.5" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="294.82" y="95.5" ></text>
</g>
<g >
<title>blob_of_principal (2,083 samples, 0.28%)</title><rect x="278.7" y="117" width="3.4" height="15.0" fill="rgb(228,110,25)" rx="2" ry="2" />
<text  x="281.74" y="127.5" ></text>
</g>
<g >
<title>B_mul (78 samples, 0.01%)</title><rect x="300.4" y="117" width="0.2" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="303.44" y="127.5" ></text>
</g>
<g >
<title>Array_init (845 samples, 0.11%)</title><rect x="277.4" y="117" width="1.3" height="15.0" fill="rgb(236,150,34)" rx="2" ry="2" />
<text  x="280.35" y="127.5" ></text>
</g>
<g >
<title>B_gt (2,430 samples, 0.33%)</title><rect x="1050.8" y="85" width="3.9" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="1053.81" y="95.5" ></text>
</g>
<g >
<title>trans_state4 (84 samples, 0.01%)</title><rect x="1167.8" y="133" width="0.1" height="15.0" fill="rgb(243,158,42)" rx="2" ry="2" />
<text  x="1170.76" y="143.5" ></text>
</g>
<g >
<title>B_eq (4,860 samples, 0.66%)</title><rect x="123.7" y="101" width="7.7" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="126.67" y="111.5" ></text>
</g>
</g>
</svg>
