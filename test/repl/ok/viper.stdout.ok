field $message_async: Int
define $Perm($Self) ((((true && acc(($Self).claimed,write)) && acc(($Self).count,write)) && 
  acc(($Self).$message_async,write)))
define $Inv($Self) (((invariant_7($Self) && invariant_8($Self)) && (((0 <= 
  ($Self).$message_async) && (($Self).$message_async <= 1)) && ((($Self).$message_async == 1) ==> (
  ($Self).claimed && (($Self).count == 0))))))
method __init__($Self: Ref)
    
    requires $Perm($Self)
    ensures $Perm($Self)
    ensures $Inv($Self)
    { 
      ($Self).claimed := false
      ($Self).count := 0
      ($Self).$message_async := 0 
    }
field claimed: Bool
field count: Int
define invariant_7($Self) (((($Self).count == 0) || (($Self).count == 1)))
define invariant_8($Self) (((!($Self).claimed) ==> (($Self).count == 0)))
method claim($Self: Ref)
    
    requires $Perm($Self)
    requires $Inv($Self)
    ensures $Perm($Self)
    ensures $Inv($Self)
    { 
      if ((!($Self).claimed))
         { 
           ($Self).claimed := true
           ($Self).$message_async := (($Self).$message_async + 1)
           exhale ($Perm($Self) && $Inv($Self))
           { 
              inhale ($Perm($Self) && ($Inv($Self) && (($Self).$message_async > 0)))
              ($Self).$message_async := (($Self).$message_async - 1)
              { 
                 ($Self).count := (($Self).count + 1) 
               }
              exhale ($Perm($Self) && $Inv($Self)) 
            }
           inhale ($Perm($Self) && $Inv($Self)) 
         }
      label $Ret 
    }
