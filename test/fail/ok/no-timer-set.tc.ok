no-timer-set.mo:3.10-3.18: type error [M0119], object field setTimer is not contained in expected type
  module {
    type ErrorCode =
      {
        #call_error : {err_code : Nat32__0__prelude};
        #canister_error;
        #canister_reject;
        #destination_invalid;
        #future : Nat32__0__prelude;
        #system_fatal;
        #system_transient;
        #system_unknown
      };
    Array_init : <T>(len : Nat__0__prelude, x : T) -> [var T];
    Array_tabulate :
      <T>(len : Nat__0__prelude, gen : Nat__0__prelude -> T) -> [T];
    Ret : <T>() -> T;
    Types :
      module {
        type Any = Any;
        type Blob = Blob;
        type Bool = Bool;
        type Char = Char;
        type Error = Error;
        type Float = Float;
        type Int = Int;
        type Int16 = Int16;
        type Int32 = Int32;
        type Int64 = Int64;
        type Int8 = Int8;
        type Nat = Nat;
        type Nat16 = Nat16;
        type Nat32 = Nat32;
        type Nat64 = Nat64;
        type Nat8 = Nat8;
        type None = None;
        type Null = Null;
        type Principal = Principal;
        type Region = Region;
        type Text = Text
      };
    abs : (x : Int__0__prelude) -> Nat__0__prelude;
    arccos : (f : Float__0__prelude) -> Float__0__prelude;
    arcsin : (f : Float__0__prelude) -> Float__0__prelude;
    arctan : (f : Float__0__prelude) -> Float__0__prelude;
    arctan2 :
      (y : Float__0__prelude, x : Float__0__prelude) -> Float__0__prelude;
    arrayMutToBlob : (a : [var Nat8__0__prelude]) -> Blob__0__prelude;
    arrayToBlob : (a : [Nat8__0__prelude]) -> Blob__0__prelude;
    blobCompare :
      (b1 : Blob__0__prelude, b2 : Blob__0__prelude) -> Int8__0__prelude;
    blobOfPrincipal : (id : Principal__0__prelude) -> Blob__0__prelude;
    blobToArray : (b : Blob__0__prelude) -> [Nat8__0__prelude];
    blobToArrayMut : (b : Blob__0__prelude) -> [var Nat8__0__prelude];
    btstInt16 :
      (w : Int16__0__prelude, amount : Int16__0__prelude) -> Bool__0__prelude;
    btstInt32 :
      (w : Int32__0__prelude, amount : Int32__0__prelude) -> Bool__0__prelude;
    btstInt64 :
      (w : Int64__0__prelude, amount : Int64__0__prelude) -> Bool__0__prelude;
    btstInt8 :
      (w : Int8__0__prelude, amount : Int8__0__prelude) -> Bool__0__prelude;
    btstNat16 :
      (w : Nat16__0__prelude, amount : Nat16__0__prelude) -> Bool__0__prelude;
    btstNat32 :
      (w : Nat32__0__prelude, amount : Nat32__0__prelude) -> Bool__0__prelude;
    btstNat64 :
      (w : Nat64__0__prelude, amount : Nat64__0__prelude) -> Bool__0__prelude;
    btstNat8 :
      (w : Nat8__0__prelude, amount : Nat8__0__prelude) -> Bool__0__prelude;
    call_raw :
      (p : Principal__0__prelude, m : Text__0__prelude, a : Blob__0__prelude) ->
        async Blob__0__prelude;
    canisterSubnet : () -> Principal__0__prelude;
    canisterVersion : () -> Nat64__0__prelude;
    charIsAlphabetic : (c : Char__0__prelude) -> Bool__0__prelude;
    charIsLowercase : (c : Char__0__prelude) -> Bool__0__prelude;
    charIsUppercase : (c : Char__0__prelude) -> Bool__0__prelude;
    charIsWhitespace : (c : Char__0__prelude) -> Bool__0__prelude;
    charToLower : (c : Char__0__prelude) -> Char__0__prelude;
    charToNat32 : (c : Char__0__prelude) -> Nat32__0__prelude;
    charToText : (c : Char__0__prelude) -> Text__0__prelude;
    charToUpper : (c : Char__0__prelude) -> Char__0__prelude;
    clzInt16 : (w : Int16__0__prelude) -> Int16__0__prelude;
    clzInt32 : (w : Int32__0__prelude) -> Int32__0__prelude;
    clzInt64 : (w : Int64__0__prelude) -> Int64__0__prelude;
    clzInt8 : (w : Int8__0__prelude) -> Int8__0__prelude;
    clzNat16 : (w : Nat16__0__prelude) -> Nat16__0__prelude;
    clzNat32 : (w : Nat32__0__prelude) -> Nat32__0__prelude;
    clzNat64 : (w : Nat64__0__prelude) -> Nat64__0__prelude;
    clzNat8 : (w : Nat8__0__prelude) -> Nat8__0__prelude;
    cos : (f : Float__0__prelude) -> Float__0__prelude;
    createActor :
      (wasm : Blob__0__prelude, argument : Blob__0__prelude) ->
        async Principal__0__prelude;
    ctzInt16 : (w : Int16__0__prelude) -> Int16__0__prelude;
    ctzInt32 : (w : Int32__0__prelude) -> Int32__0__prelude;
    ctzInt64 : (w : Int64__0__prelude) -> Int64__0__prelude;
    ctzInt8 : (w : Int8__0__prelude) -> Int8__0__prelude;
    ctzNat16 : (w : Nat16__0__prelude) -> Nat16__0__prelude;
    ctzNat32 : (w : Nat32__0__prelude) -> Nat32__0__prelude;
    ctzNat64 : (w : Nat64__0__prelude) -> Nat64__0__prelude;
    ctzNat8 : (w : Nat8__0__prelude) -> Nat8__0__prelude;
    cyclesAccept : <system>(amount : Nat__0__prelude) -> Nat__0__prelude;
    cyclesAdd : <system>(amount : Nat__0__prelude) -> ();
    cyclesAvailable : () -> Nat__0__prelude;
    cyclesBalance : () -> Nat__0__prelude;
    cyclesBurn : <system>(amount : Nat__0__prelude) -> Nat__0__prelude;
    cyclesRefunded : () -> Nat__0__prelude;
    debugPrint : (x : Text__0__prelude) -> ();
    debugPrintChar : (x : Char__0__prelude) -> ();
    debugPrintInt : (x : Int__0__prelude) -> ();
    debugPrintNat : (x : Nat__0__prelude) -> ();
    decodeUtf8 : (b : Blob__0__prelude) -> ?Text__0__prelude;
    encodeUtf8 : (t : Text__0__prelude) -> Blob__0__prelude;
    error : (message : Text__0__prelude) -> Error__0__prelude;
    errorCode : (e : Error__0__prelude) -> ErrorCode__0__40prim;
    errorMessage : (e : Error__0__prelude) -> Text__0__prelude;
    exists : <T>(f : T -> Bool__0__prelude) -> Bool__0__prelude;
    exp : (f : Float__0__prelude) -> Float__0__prelude;
    floatAbs : (f : Float__0__prelude) -> Float__0__prelude;
    floatCeil : (f : Float__0__prelude) -> Float__0__prelude;
    floatCopySign :
      (f : Float__0__prelude, g : Float__0__prelude) -> Float__0__prelude;
    floatFloor : (f : Float__0__prelude) -> Float__0__prelude;
    floatMax :
      (f : Float__0__prelude, g : Float__0__prelude) -> Float__0__prelude;
    floatMin :
      (f : Float__0__prelude, g : Float__0__prelude) -> Float__0__prelude;
    floatNearest : (f : Float__0__prelude) -> Float__0__prelude;
    floatSqrt : (f : Float__0__prelude) -> Float__0__prelude;
    floatToFormattedText :
      (f : Float__0__prelude, prec : Nat8__0__prelude,
       mode : Nat8__0__prelude) -> Text__0__prelude;
    floatToInt : (f : Float__0__prelude) -> Int__0__prelude;
    floatToInt64 : (f : Float__0__prelude) -> Int64__0__prelude;
    floatToText : (x : Float__0__prelude) -> Text__0__prelude;
    floatTrunc : (f : Float__0__prelude) -> Float__0__prelude;
    forall : <T>(f : T -> Bool__0__prelude) -> Bool__0__prelude;
    getCandidLimits :
      <system>() ->
        {
          bias : Nat32__0__prelude;
          denominator : Nat32__0__prelude;
          numerator : Nat32__0__prelude
        };
    getCertificate : () -> ?Blob__0__prelude;
    hashBlob : (b : Blob__0__prelude) -> Nat32__0__prelude;
    idlHash : (x : Text__0__prelude) -> Nat32__0__prelude;
    int16ToInt : (n : Int16__0__prelude) -> Int__0__prelude;
    int16ToInt32 : (n : Int16__0__prelude) -> Int32__0__prelude;
    int16ToInt8 : (n : Int16__0__prelude) -> Int8__0__prelude;
    int16ToNat16 : (n : Int16__0__prelude) -> Nat16__0__prelude;
    int32ToInt : (n : Int32__0__prelude) -> Int__0__prelude;
    int32ToInt16 : (n : Int32__0__prelude) -> Int16__0__prelude;
    int32ToInt64 : (n : Int32__0__prelude) -> Int64__0__prelude;
    int32ToNat32 : (n : Int32__0__prelude) -> Nat32__0__prelude;
    int64ToFloat : (n : Int64__0__prelude) -> Float__0__prelude;
    int64ToInt : (n : Int64__0__prelude) -> Int__0__prelude;
    int64ToInt32 : (n : Int64__0__prelude) -> Int32__0__prelude;
    int64ToNat64 : (n : Int64__0__prelude) -> Nat64__0__prelude;
    int8ToInt : (n : Int8__0__prelude) -> Int__0__prelude;
    int8ToInt16 : (n : Int8__0__prelude) -> Int16__0__prelude;
    int8ToNat8 : (n : Int8__0__prelude) -> Nat8__0__prelude;
    intToFloat : (n : Int__0__prelude) -> Float__0__prelude;
    intToInt16 : (n : Int__0__prelude) -> Int16__0__prelude;
    intToInt16Wrap : (n : Int__0__prelude) -> Int16__0__prelude;
    intToInt32 : (n : Int__0__prelude) -> Int32__0__prelude;
    intToInt32Wrap : (n : Int__0__prelude) -> Int32__0__prelude;
    intToInt64 : (n : Int__0__prelude) -> Int64__0__prelude;
    intToInt64Wrap : (n : Int__0__prelude) -> Int64__0__prelude;
    intToInt8 : (n : Int__0__prelude) -> Int8__0__prelude;
    intToInt8Wrap : (n : Int__0__prelude) -> Int8__0__prelude;
    intToNat16Wrap : (n : Int__0__prelude) -> Nat16__0__prelude;
    intToNat32Wrap : (n : Int__0__prelude) -> Nat32__0__prelude;
    intToNat64Wrap : (n : Int__0__prelude) -> Nat64__0__prelude;
    intToNat8Wrap : (n : Int__0__prelude) -> Nat8__0__prelude;
    isController : (p : Principal__0__prelude) -> Bool__0__prelude;
    isReplicatedExecution : () -> Bool__0__prelude;
    log : (f : Float__0__prelude) -> Float__0__prelude;
    nat16ToInt16 : (n : Nat16__0__prelude) -> Int16__0__prelude;
    nat16ToNat : (n : Nat16__0__prelude) -> Nat__0__prelude;
    nat16ToNat32 : (n : Nat16__0__prelude) -> Nat32__0__prelude;
    nat16ToNat8 : (n : Nat16__0__prelude) -> Nat8__0__prelude;
    nat32ToChar : (w : Nat32__0__prelude) -> Char__0__prelude;
    nat32ToInt32 : (n : Nat32__0__prelude) -> Int32__0__prelude;
    nat32ToNat : (n : Nat32__0__prelude) -> Nat__0__prelude;
    nat32ToNat16 : (n : Nat32__0__prelude) -> Nat16__0__prelude;
    nat32ToNat64 : (n : Nat32__0__prelude) -> Nat64__0__prelude;
    nat64ToInt64 : (n : Nat64__0__prelude) -> Int64__0__prelude;
    nat64ToNat : (n : Nat64__0__prelude) -> Nat__0__prelude;
    nat64ToNat32 : (n : Nat64__0__prelude) -> Nat32__0__prelude;
    nat8ToInt8 : (n : Nat8__0__prelude) -> Int8__0__prelude;
    nat8ToNat : (n : Nat8__0__prelude) -> Nat__0__prelude;
    nat8ToNat16 : (n : Nat8__0__prelude) -> Nat16__0__prelude;
    natToNat16 : (n : Nat__0__prelude) -> Nat16__0__prelude;
    natToNat32 : (n : Nat__0__prelude) -> Nat32__0__prelude;
    natToNat64 : (n : Nat__0__prelude) -> Nat64__0__prelude;
    natToNat8 : (n : Nat__0__prelude) -> Nat8__0__prelude;
    performanceCounter : (counter : Nat32__0__prelude) -> Nat64__0__prelude;
    popcntInt16 : (w : Int16__0__prelude) -> Int16__0__prelude;
    popcntInt32 : (w : Int32__0__prelude) -> Int32__0__prelude;
    popcntInt64 : (w : Int64__0__prelude) -> Int64__0__prelude;
    popcntInt8 : (w : Int8__0__prelude) -> Int8__0__prelude;
    popcntNat16 : (w : Nat16__0__prelude) -> Nat16__0__prelude;
    popcntNat32 : (w : Nat32__0__prelude) -> Nat32__0__prelude;
    popcntNat64 : (w : Nat64__0__prelude) -> Nat64__0__prelude;
    popcntNat8 : (w : Nat8__0__prelude) -> Nat8__0__prelude;
    principalOfActor : (act : actor {}) -> Principal__0__prelude;
    principalOfBlob : (act : Blob__0__prelude) -> Principal__0__prelude;
    regionGrow :
      (r : Region__0__prelude, pages : Nat64__0__prelude) ->
        Nat64__0__prelude;
    regionId : (r : Region__0__prelude) -> Nat__0__prelude;
    regionLoadBlob :
      (r : Region__0__prelude, offset : Nat64__0__prelude,
       size : Nat__0__prelude) -> Blob__0__prelude;
    regionLoadFloat :
      (r : Region__0__prelude, offset : Nat64__0__prelude) ->
        Float__0__prelude;
    regionLoadInt16 :
      (r : Region__0__prelude, offset : Nat64__0__prelude) ->
        Int16__0__prelude;
    regionLoadInt32 :
      (r : Region__0__prelude, offset : Nat64__0__prelude) ->
        Int32__0__prelude;
    regionLoadInt64 :
      (r : Region__0__prelude, offset : Nat64__0__prelude) ->
        Int64__0__prelude;
    regionLoadInt8 :
      (r : Region__0__prelude, offset : Nat64__0__prelude) ->
        Int8__0__prelude;
    regionLoadNat16 :
      (r : Region__0__prelude, offset : Nat64__0__prelude) ->
        Nat16__0__prelude;
    regionLoadNat32 :
      (r : Region__0__prelude, offset : Nat64__0__prelude) ->
        Nat32__0__prelude;
    regionLoadNat64 :
      (r : Region__0__prelude, offset : Nat64__0__prelude) ->
        Nat64__0__prelude;
    regionLoadNat8 :
      (r : Region__0__prelude, offset : Nat64__0__prelude) ->
        Nat8__0__prelude;
    regionNew : () -> Region__0__prelude;
    regionSize : (r : Region__0__prelude) -> Nat64__0__prelude;
    regionStoreBlob :
      (r : Region__0__prelude, offset : Nat64__0__prelude,
       val : Blob__0__prelude) -> ();
    regionStoreFloat :
      (r : Region__0__prelude, offset : Nat64__0__prelude,
       val : Float__0__prelude) -> ();
    regionStoreInt16 :
      (r : Region__0__prelude, offset : Nat64__0__prelude,
       val : Int16__0__prelude) -> ();
    regionStoreInt32 :
      (r : Region__0__prelude, offset : Nat64__0__prelude,
       val : Int32__0__prelude) -> ();
    regionStoreInt64 :
      (r : Region__0__prelude, offset : Nat64__0__prelude,
       val : Int64__0__prelude) -> ();
    regionStoreInt8 :
      (r : Region__0__prelude, offset : Nat64__0__prelude,
       val : Int8__0__prelude) -> ();
    regionStoreNat16 :
      (r : Region__0__prelude, offset : Nat64__0__prelude,
       val : Nat16__0__prelude) -> ();
    regionStoreNat32 :
      (r : Region__0__prelude, offset : Nat64__0__prelude,
       val : Nat32__0__prelude) -> ();
    regionStoreNat64 :
      (r : Region__0__prelude, offset : Nat64__0__prelude,
       val : Nat64__0__prelude) -> ();
    regionStoreNat8 :
      (r : Region__0__prelude, offset : Nat64__0__prelude,
       val : Nat8__0__prelude) -> ();
    replyDeadline : () -> Nat64__0__prelude;
    rts_callback_table_count : () -> Nat__0__prelude;
    rts_callback_table_size : () -> Nat__0__prelude;
    rts_collector_instructions : () -> Nat__0__prelude;
    rts_heap_size : () -> Nat__0__prelude;
    rts_logical_stable_memory_size : () -> Nat__0__prelude;
    rts_max_live_size : () -> Nat__0__prelude;
    rts_max_stack_size : () -> Nat__0__prelude;
    rts_memory_size : () -> Nat__0__prelude;
    rts_mutator_instructions : () -> Nat__0__prelude;
    rts_reclaimed : () -> Nat__0__prelude;
    rts_stable_memory_size : () -> Nat__0__prelude;
    rts_total_allocation : () -> Nat__0__prelude;
    rts_upgrade_instructions : () -> Nat__0__prelude;
    rts_version : () -> Text__0__prelude;
    setCandidLimits :
      <system>{
                bias : Nat32__0__prelude;
                denominator : Nat32__0__prelude;
                numerator : Nat32__0__prelude
              } ->
        ();
    setCertifiedData : (data : Blob__0__prelude) -> ();
    shiftLeft :
      (x : Nat__0__prelude, shift : Nat32__0__prelude) -> Nat__0__prelude;
    shiftRight :
      (x : Nat__0__prelude, shift : Nat32__0__prelude) -> Nat__0__prelude;
    sin : (f : Float__0__prelude) -> Float__0__prelude;
    stableMemoryGrow : (pages : Nat64__0__prelude) -> Nat64__0__prelude;
    stableMemoryLoadBlob :
      (offset : Nat64__0__prelude, size : Nat__0__prelude) ->
        Blob__0__prelude;
    stableMemoryLoadFloat : (offset : Nat64__0__prelude) -> Float__0__prelude;
    stableMemoryLoadInt16 : (offset : Nat64__0__prelude) -> Int16__0__prelude;
    stableMemoryLoadInt32 : (offset : Nat64__0__prelude) -> Int32__0__prelude;
    stableMemoryLoadInt64 : (offset : Nat64__0__prelude) -> Int64__0__prelude;
    stableMemoryLoadInt8 : (offset : Nat64__0__prelude) -> Int8__0__prelude;
    stableMemoryLoadNat16 : (offset : Nat64__0__prelude) -> Nat16__0__prelude;
    stableMemoryLoadNat32 : (offset : Nat64__0__prelude) -> Nat32__0__prelude;
    stableMemoryLoadNat64 : (offset : Nat64__0__prelude) -> Nat64__0__prelude;
    stableMemoryLoadNat8 : (offset : Nat64__0__prelude) -> Nat8__0__prelude;
    stableMemorySize : () -> Nat64__0__prelude;
    stableMemoryStoreBlob :
      (offset : Nat64__0__prelude, val : Blob__0__prelude) -> ();
    stableMemoryStoreFloat :
      (offset : Nat64__0__prelude, val : Float__0__prelude) -> ();
    stableMemoryStoreInt16 :
      (offset : Nat64__0__prelude, val : Int16__0__prelude) -> ();
    stableMemoryStoreInt32 :
      (offset : Nat64__0__prelude, val : Int32__0__prelude) -> ();
    stableMemoryStoreInt64 :
      (offset : Nat64__0__prelude, val : Int64__0__prelude) -> ();
    stableMemoryStoreInt8 :
      (offset : Nat64__0__prelude, val : Int8__0__prelude) -> ();
    stableMemoryStoreNat16 :
      (offset : Nat64__0__prelude, val : Nat16__0__prelude) -> ();
    stableMemoryStoreNat32 :
      (offset : Nat64__0__prelude, val : Nat32__0__prelude) -> ();
    stableMemoryStoreNat64 :
      (offset : Nat64__0__prelude, val : Nat64__0__prelude) -> ();
    stableMemoryStoreNat8 :
      (offset : Nat64__0__prelude, val : Nat8__0__prelude) -> ();
    stableVarQuery :
      () -> shared query () -> async {size : Nat64__0__prelude};
    tan : (f : Float__0__prelude) -> Float__0__prelude;
    textCompare :
      (t1 : Text__0__prelude, t2 : Text__0__prelude) -> Int8__0__prelude;
    textLowercase : (t : Text__0__prelude) -> Text__0__prelude;
    textUppercase : (t : Text__0__prelude) -> Text__0__prelude;
    time : () -> Nat64__0__prelude;
    trap : (x : Text__0__prelude) -> None__0__prelude
  }
